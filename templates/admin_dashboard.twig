{% extends "base.twig" %}

{% block page_class %}admin-dashboard{% endblock %}

{% macro feedbackGraph(yes, no, width = 100, additionalCssClass) %}
	<div class="feedback-graph {{ additionalCssClass|default('') }}">
		{% if yes %}<span class="yes" style="width: {{ min(96, ((yes / (yes + no)) * width)|round) }}px"><span>{{ yes }}</span></span>{% endif %}
		{% if no %} <span class="no"  style="width: {{ min(96, ((no / (yes + no)) * width)|round) }}px"><span>{{ no }}</span></span>{% endif %}
	</div>
{% endmacro %}
{% import _self as self %}

{% block content %}

<nav class="floating_toc" data-toc-levels="2">
	<ul></ul>
</nav>

<article class="row">
	<h2>Admin ops</h2>

	{% if tool_output %}
	<pre>{{ tool_output|raw }}</pre>
	{% else %}
	<nav class="admin-tools">
		<ul>
			<h4>Server Ops</h4>
			<li><a href="{{ path(current_route, {'tool': 'RefreshCompiledCss'}) }}">Refresh compiled CSS</a></li>
			<li><a href="{{ path(current_route, {'tool': 'RemoveOldCompiledCss'}) }}">Remove old CSS</a></li>
			<li><a href="{{ path(current_route, {'tool': 'PopulateUsersCountry'}) }}">Populate Country data</a></li>
		</ul>

		<ul>
			<h4>DB maintenance</h4>
			<li><a href="{{ path(current_route, {'tool': 'CheckSongsRangeConsistency'}) }}">Check lower-highest notes</a></li>
			<li><a href="{{ path(current_route, {'tool': 'CheckUsersRangeConsistency'}) }}">Check user lower-highest notes</a></li>
			<li><a href="{{ path(current_route, {'tool': 'CheckChordsOrder'}) }}">Check chord order</a></li>
			<li><a href="{{ path('chord_correction_panel') }}">Chord correction panel</a></li>
			<li><a href="{{ path(current_route, {'tool': 'TestAllTranspositions'}) }}">Functional test: all transpositions</a></li>
			<li><a href="{{ path(current_route, {'tool': 'CheckOrphanChords'}) }}">Detect orphan chords</a></li>
			<li><a href="{{ path(current_route, {'tool': 'CheckMissingTranslations'}) }}">Missing translations</a></li>
		</ul>

		<ul>
			<h4>Data research</h4>
			<li><a href="{{ path(current_route, {'tool': 'GetVoiceRangeOfGoodUsers'}) }}">Get voice range of all good users</a></li>
			<li><a href="{{ path(current_route, {'tool': 'GetPerformanceByNumberOfFeedbacks'}) }}">Get Performance and frequency by # of FBs</a></li>
		</ul>

		<p><a href="{{ url(current_route, { long: 1}) }}" class="btn-neutral">Load long reports ⇲</a></p>
		
	</nav>
	{% endif %}

</article>

<article class="db-status">
	<h2>Global status</h2>

	<div class="circles-container">
		<h4 class="data-circle">
			<span>Not null users</span> 
			<b>{{ users_reporting_fb.not_null_users }}</b>
			<small>Total: {{ user_count }}</small>
		</h4>

		<h4 class="data-circle good-users">
			<span>Good users<br><small>voice range > 1oct</small></span>
			<b>{{ ((good_users / user_count) * 100)|round }}%</b>
			<small>{{ good_users }}</small>
		</h4>
	</div>

	<h4>Song availability</h4>
	<div class="circles-container">
	{% for book in song_availability %}
		<h4 class="data-circle small-circle">
			<span>{{ app.books[book.id_book].lang_name }}</span> 
			<b>{{ ((book.current / book.total) * 100)|round(0, 'floor') }}<small>%</small></b>
		</h4>
	{% endfor %}
	</div>

	<h4>People voice range</h4>
	<div class="circles-container">
	{% for book in song_availability %}
		<h4 class="data-circle small-circle">
			<span>{{ app.books[book.id_book].lang_name }}</span> 
			<b>{{ ((book.peopledata / book.current) * 100)|round(0, 'floor') }}<small>%</small></b>
		</h4>
	{% endfor %}
	</div>

	<h4>Users by songbook language</h4>
	<table class="data-table">
		<thead>
			<tr><th>Language</th><th>Users</th><th>%</th><th colspan="2">Performance</th></tr>
		</thead>
		<tbody>
			{% for book in usersByBook %}
				<tr>
					<td>{{ book.lang_name }}</td>
					<td>{{ book.users }}</td>
					<td>{{ book.percent|round(1) }}<small>%</small></td>
					<td>{{ self.feedbackGraph(performanceByBook[book.id_book].yes, performanceByBook[book.id_book].no) }}</td>
					{% if performanceByBook[book.id_book] %}<td>{{ ((performanceByBook[book.id_book].yes / (performanceByBook[book.id_book].yes + performanceByBook[book.id_book].no)) * 100)|round(1) }}<small>%</small></td>{% endif %}
				</tr>
			{% endfor %}
		</tbody>
	</table>

</article>

<article>

	<h2>Performance overview</h2>
	<table class="data-table table-with-graphs">
	{% for group, gp in global_performance %}
		<tr>
			<th>{{ group }}:</th>
			<td>{{ ((gp.yes / gp.total) * 100)|round }}<small>%</small> </td>
			<td>
				<div class="clearfix inline-graph">
					{{ self.feedbackGraph(gp.yes, gp.no) }}
				</div>
			</td>
		</tr>
	{% endfor %}
	</table>

	<h3>Users reporting feedback</h3>
	<table class="data-table table-with-graphs">
		<tr>
			{% set users_not_reporting_fb = user_count - users_reporting_fb.users_reporting_fb %}
			<th>Total:</th>
			<td>
				{{ ((users_reporting_fb.users_reporting_fb / user_count) * 100)|round }}<small>%</small>
			</td>
			<td>
				<div class="clearfix inline-graph">
					{{ self.feedbackGraph(users_reporting_fb.users_reporting_fb, users_not_reporting_fb) }}
				</div>
			</td>
		</tr>
		<tr>
			{% set users_not_reporting_fb = users_reporting_fb.not_null_users - users_reporting_fb.users_reporting_fb %}
			<th>Not null:</th>
			<td>
				{{ ((users_reporting_fb.users_reporting_fb / users_reporting_fb.not_null_users) * 100)|round }}<small>%</small>
			</td>
			<td>
				<div class="clearfix inline-graph">
					{{ self.feedbackGraph(users_reporting_fb.users_reporting_fb, users_not_reporting_fb) }}
				</div>
			</td>
		</tr>
		<tr>
			{% set users_not_reporting_fb = users_reporting_fb.good_users - users_reporting_fb.users_reporting_fb %}
			<th>Good:</th>
			<td>
				{{ ((users_reporting_fb.users_reporting_fb / users_reporting_fb.good_users) * 100)|round }}<small>%</small>
			</td>
			<td>
				<div class="clearfix inline-graph">
					{{ self.feedbackGraph(users_reporting_fb.users_reporting_fb, users_not_reporting_fb) }}
				</div>
			</td>
		</tr>
	</table>

	<h3>Songs fb'ed by language</h3>

	<table class="data-table table-with-graphs">
	{% for book in songs_with_fb %}
		{% set book_fb = book.total - book.nofb %}
		<tr>
			<th>{{ app.books[book.id_book].lang_name }}:</th>
			<td>{{ ((book_fb / book.total) * 100)|round }}<small>%</small></td>
			<td>
				<div class="clearfix inline-graph">{{ self.feedbackGraph(book_fb, book.nofb) }}</div>
			</td>
		</tr>
	{% endfor %}
	</table>

	<h3>Performance by voice type</h3>
	<table class="data-table table-with-graphs">
		{% for voice in performanceByVoice %}
			<tr>
				<th>{{ voice.voiceType|default('(unspecified)') }}</th>
				<td>{{ (voice.performance * 100)|round(1) }}<small>%</small></td>
				<td>
					<div class="clearfix inline-graph">{{ self.feedbackGraph(voice.fbs, voice.fbs - (voice.fbs * voice.performance)|round(0)) }}</div>
				</td>
			</tr>
		{% endfor %}
	</table>

</article>

<article>
	<h2>Performance by country</h2>

	<table class="data-table">
		<thead><tr>
			<th>Country</th>
			<th>Performance</th>
			<th>%</th>
			<th>good</th>
		</tr></thead>

		<tbody>
	{% for country, perf in perf_by_country %}
			<tr>
				<td>
					<img src="{{ global.request.basepath }}/static/img/flags/{{ perf.country|lower }}.png" width="16" />&nbsp;
					{{ perf.country_name }}
				</td>
				<td>{{ self.feedbackGraph(perf.yes, perf.no) }}</td>
				<td>{{ perf.performance|round }}<small>%</small></td>
				<td>{{ (perf.good_users * 100)|round }}<small>%</small></td>
			</tr>
	{% endfor %}
		</tbody>
	</table>
</article>

<article>
	<h2>Good users day by day</h2>

	<table class="data-table">
		<thead><tr>
			<th>Registr. day</th>
			<th>Goods/bads</th>
			<th>%</th>
		</tr></thead>
		<tbody>
	{% for day in good_users_chrono %}
			<tr>
				<td>{{ day.day }}</td>
				<td>{{ self.feedbackGraph(day.goods, day.total) }}</td>
				<td>{{ day.goods_rate }}</td>
			</tr>
	{% endfor %}
		</tbody>
	</table>
</article>

<article>
	<h2>Global performance day by day</h2>

	<table class="data-table">
		<thead><tr>
			<th>Date</th>
			<th>Cumulative</th>
			<th>Perf</th>
			<th>Day</th>
			<th>Perf</th>
		</tr></thead>
		<tbody>
	{% for day in global_perf_chrono %}
			<tr>
				<td>{{ day.day }}</td>
				<td>{{ self.feedbackGraph(day.c_yes, day.c_no) }}</td>
				<td>{{ day.c_performance|round }}<small>%</small></td>
				<td>{{ self.feedbackGraph(day.d_yes, day.d_no) }}</td>
				<td>{{ day.d_performance|round }}<small>%</small></td>
			</tr>
	{% endfor %}
		</tbody>
	</table>
</article>

<article>
	<h2>Feedback ({{ feedback|length }})</h2>

	<table class="data-table">
		<thead><tr>
			<th>Song</th>
			<th>Feedback</th>
			<th>Perf</th>
			<th>Wide</th>
		</tr></thead>

		<tbody>
	{% for song in feedback %}
			<tr>
				<td>{{ song.title }}</td>
				<td>{{ self.feedbackGraph(song.yes, song.no) }}</td>
				<td>{{ song.performance|round(2) }}</td>
				<td>{{ song.wideness }}</td>
			</tr>
	{% endfor %}
		</tbody>
	</table>
</article>

<article>
	<h2>Unsuccessful songs</h2>

	<table class="data-table">
		<thead><tr>
			<th>Song</th>
			<th>Feedback</th>
			<th>Total</th>
			<th>Perf</th>
			<th>Wide</th>
		</tr></thead>

		<tbody>
	{% for song in feedback %}
		{% if song.performance < 0.5 %}
			<tr>
				<td>{{ song.title }}</td>
				<td>{{ self.feedbackGraph(song.yes, song.no) }}</td>
				<td>{{ song.yes + song.no }}
				<td>{{ song.performance|round(2) }}</td>
				<td>{{ song.wideness }}</td>
			</tr>
		{% endif %}
	{% endfor %}
		</tbody>
	</table>
</article>

<article class="row">
	<h2>Most active users ({{ most_active_users|length }})</h2>

	<table class="data-table">
		<thead><tr>
			<th>ID</th>
			<th>E-mail</th>
			<th>Voice</th>
			<th>FB</th>
			<th>Perf</th>
			<th>Low/high attempts</th>
			<th>Country</th>
		</tr></thead>
		<tbody>
	{% for user in most_active_users %}
			<tr>
				<td>{{ user.id_user }}</td>
				<td>{{ user.email }}</td>
				<td>{{ user.lowest_note }} - {{ user.highest_note }}</td>
				<td>{{ user.total }}</td>
				<td>{{ self.feedbackGraph(user.yes, user.no) }}</td>
				<td>{{ user.wizard_lowest_attempts }} / {{ user.wizard_highest_attempts }}</td>
				<td><img src="https://cdn1.iconfinder.com/data/icons/famfamfam_flag_icons/{{ user.country|lower }}.png" width="16" />&nbsp;
					{{ countries[user.country] }}</td>
			</tr>
	{% endfor %}
		</tbody>
	</table>
</article>

<article class="half">
	<h2>Unhappy (fb < 0.5) users ({{ unhappy_users|length }})</h2>

	<table class="data-table">
		<thead><tr>
			<th>ID</th>
			<th>Unhappy</th>
			<th>Action</th>
			<th>Old perf</th>
			<th>Current FB</th>
			<th>Total</th>
			<th>Current perf</th>
		</tr></thead>
		<tbody>
	{% for user in unhappy_users %}
			<tr>
				<td>{{ user.id_user }}</td>
				<td>{{ user.time_unhappy|default('-') }}</td>
				<td>{{ user.action|default('-') }}</td>
				<td>{% if user.perf_before_action %}{{ user.perf_before_action|round(2) }}{% endif %}</td>
				<td>{{ self.feedbackGraph(user.yes, user.no) }}</td>
				<td>{{ 0 + user.total }}</td>
				<td class="{% if user.perf_before_action %}{{ (user.perf > user.perf_before_action) ? 'green' : 'red' }}{% endif %}">{{ user.perf|round(2) }}</td>
			</tr>
	{% endfor %}
		</tbody>
	</table>
</article>

<article>
	<h2>Detailed FB: transposition</h2>

	<table class="data-table">
		<thead><tr>
			<th>Transposition</th>
			<th>FBs</th>
			<th>%</th>
		</tr></thead>
		<tbody>
	{% for fbs in dfb_transposition %}
			<tr>
				<td>{{ fbs.transposition|default('[unspecified]') }}</td>
				<td>{{ fbs.fbs }}</td>
				<td>{{ (fbs.fbs_relative * 100)|round }}</td>
			</tr>
	{% endfor %}
		</tbody>
	</table>
</article>

<article>
	<h2>Detailed FB: PC status</h2>

	<table class="data-table">
		<thead><tr>
			<th>PC Status</th>
			<th>FBs</th>
			<th>% PC</th>
		</tr></thead>
		<tbody>
	{% for fbpc in dfb_pc_status %}
			<tr>
				<td>{{ fbpc.pc_status|default('[unspecified]') }}</td>
				<td>{{ fbpc.fbss }}</td>
				<td>{{ ((fbpc.chosePeopleCompatible / fbpc.fbss) * 100)|round }}<small>%</small></td>
			</tr>
	{% endfor %}
		</tbody>
	</table>
</article>

<article>
	<h2>Detailed FB: centered score rate</h2>

	<table class="data-table">
		<thead><tr>
			<th>Song#</th>
			<th>Title</th>
			<th>Time</th>
			<th>Score rate</th>
		</tr></thead>
		<tbody>
	{% for fb in dfb_centered_scorerate %}
			<tr>
				<td>{{ fb.id_song }}</td>
				<td>{{ fb.title }}</td>
				<td>{{ fb.time }}</td>
				<td>{{ fb.centered_score_rate }}</td>
			</tr>
	{% endfor %}
		</tbody>
	</table>
</article>

<article>
	<h2>Detailed FB: deviation from center</h2>

	<table class="data-table">
		<thead><tr>
			<th>Transposition</th>
			<th>Deviation</th>
			<th># fb 👍</th>
		</tr></thead>
		<tbody>
		{% for row in dfb_deviation %}
			<tr>
				<td>{{ row.transposition|default("-") }}</td>
				<td>{{ row.deviation_from_center }}</td>
				<td>{{ row.fbs }}</td>
			</tr>
		{% endfor %}
		</tbody>
	</table>
</article>

{% import 'base.twig' as self %}
{{ self.loadJsFramework() }}

<script>
/**
 * NBCDi: utilidades de documentos
 * @type {Object}
 */
BC3 = {

    /**
     * Genera la tabla de contenidos
     */
    generateToc: function()
    {
        //Si hay links del document, añadirlos
        toc_level = $(".floating_toc").data("toc-levels");
        titulos = $("h" + toc_level);
        for (i in titulos.get())
        {
            marker = "h" + toc_level + "_" + i;

            (function(j, marker, titulos) {
                $(".floating_toc ul").append('<li><a href="#' + marker + '">' + titulos[i].innerHTML + '</a></li>');
            })(i, marker, titulos);

            $(titulos[i]).html(
            	'<a name="' + marker + '"></a>'
            	+ $(titulos[i]).html()
            	+ '<a href="#h2_0"> &uarr; </a>'
            );
        }

        $("body").addClass("with-floating-toc");
    },
};

$(function() {
    BC3.generateToc();
});

</script>
{% endblock %}
