{% extends "base.twig" %}

{% block header_extra %}
	{% if not app.neouser.isLoggedIn %}
		<script src='https://www.google.com/recaptcha/api.js'></script>
	{% endif %}
{% endblock %}

{% block page_class %}transpose-song{% endblock %}

{% macro printTransposition(transposition, original_chords) -%}
	<table class="transposition">
		<thead>
			<tr><th {% if not transposition.getAsBook %}colspan="{{ global.debug ? 4:3 }}"{% endif %}>
				{{ transposition.chordsForPrint[0]|raw }}
				<span class="capo">{{ transposition.getCapoForPrint() }}</span>
				{% if global.debug -%}
				<small class="score">[{{ transposition.score|round }}]</small>
				{%- endif %}
			</th></tr>
		</thead>
		<tbody>
		{% for chord in original_chords if not transposition.getAsBook -%}
			<tr>
				<td class="original">{{ chord|raw }}</td>
				<td class="arrow center">&rarr;</td>
				{% if global.debug -%}
				<td class="chord-score">
					{{ transposition.scoreMap[transposition.chords[loop.index0]] }}
				</td>
				{%- endif %}
				<td class="transposed" data-chord="{{ transposition.chords[loop.index0] }}">
					{{ transposition.chordsForPrint[loop.index0]|raw }}
				</td>
			</tr>
		{%- else -%}
			<tr><td class="as-book">{% trans %}(same chords as in the book){% endtrans %}</td></tr>
		{%- endfor %}
		</tbody>
	</table>
{%- endmacro %}
{% import _self as self %}

{% block content %}

{% if not app.neouser.isLoggedIn %}
	{% import "login.twig" as login %}

	<div class="teaser">
		<div class="inside">
			<div class="more-inside">
				<p>{% trans with {'%song%': song.song.title } %}Neo-Transposer helps you to automatically transpose the chords of <strong>%song%</strong> so they match your voice. Type your e-mail, follow the steps and it will transpose all the songs of the Neocatechumenal Way for you!{% endtrans %}</p>
				{{ login.login_form('', global.request.getRequestUri) }}
			</div>
		</div>
	</div>
{% endif %}

<h1>
	{{ song.song.title }}
	<small>{% if global.debug %}[{{ song.song.idSong }}]{% endif %}</small>
</h1>

<p class="explanation">{% trans %}These two transpositions match your voice (they are equivalent). The first one has easier chords:{% endtrans %}</p>

<div class="transpositions-list">
{% for transposition in song.transpositions %}
	{{ self.printTransposition(transposition, song.song.originalChordsForPrint) }}
{% endfor %}
</div>

{% if song.not_equivalent %}
{% set difference = (song.not_equivalent.deviationFromCentered > 0) ? 'higher'|trans : 'lower'|trans %}
<p class="explanation">{% trans with {'%difference%': difference } %}This other transposition is a bit %difference%, but it has easier chords and may also fit your voice:{% endtrans %}</p>
<div class="transpositions-list">
	{{ self.printTransposition(song.not_equivalent, song.song.originalChordsForPrint) }}
</div>
{% endif %}

{% if song.peopleCompatible %}
<p class="explanation people-compatible-info {{ peopleCompatibleClass|default('') }}">
	{{ peopleCompatibleMsg }}
	<small><a class="inline-block" href="{{ url('people-compatible-info', {'_locale': app.locale}) }}">{% trans %}Learn more{% endtrans %}</a></small>
</p>
<div class="transpositions-list">
	{{ self.printTransposition(song.peopleCompatible, song.song.originalChordsForPrint) }}
</div>
{% endif %}

{% if song.isAlreadyPeopleCompatible %}
<p class="tip people-compatible-info star">
	{% trans %}With these chords the assembly too will be able to sing the song comfortably.{% endtrans %}
	<small><a href="{{ url('people-compatible-info', {'_locale': app.locale}) }}">{% trans %}Learn more{% endtrans %}</a></small>
</p>
{% endif %}

{% if global.debug and song.peopleCompatibleStatus %}
<p class="tip no-icon"><big style="font-size: 2em">ðŸ’­</big> {{ song.peopleCompatibleStatusMsg }}</p>
{% endif %}

<a name="feedback"></a>

{% if app.neouser.isLoggedIn %}

<form class="transposition-feedback" method="post" action="{{ path('transposition_feedback') }}">

	<input type="hidden" name="id_song" value="{{ song.song.idSong }}">
	<input type="hidden" name="centered_score_rate" value="{{ song.transpositions[1].score / song.transpositions[0].score }}">
	<input type="hidden" name="deviation" value="{{ song.not_equivalent.deviationFromCentered ?: song.peopleCompatible.deviationFromCentered ?: null }}">
	<input type="hidden" name="pc_status" value="{{ song.peopleCompatibleStatusMsg|default('') }}">

	<p class="answers" {% if non_js_fb %}style="display: none"{% endif %}>
		<button type="submit" name="worked" value="1" class="yes {% if feedback == 'yes' %}highlighted{% endif %}" id="feedback-yes" {% if feedback == 'yes' %}title="{% trans %}You have reported the proposed transposition as valid{% endtrans %}"{% endif %} data-worked="1">
			{% trans %}Yes{% endtrans %} {% if feedback == 'yes' %}&#10004;{% endif %}
			<small>{% trans %}It has worked{% endtrans %}</small>
		</button>
		<button type="submit" name="worked" value="0" class="no {% if feedback == 'no' %}highlighted{% endif %} {% if feedback == 'yes' %}lowlighted{% endif %}" id="feedback-no" data-worked="0">
			{% trans %}No{% endtrans %}
			<small>{% trans %}It hasn't worked{% endtrans %}</small>
		</button>
	</p>

	<div class="thanks {% if non_js_fb != 'yes' %}hidden{% endif %}" id="feedback-thanks">{% trans %}Happy to know that! :-){% endtrans %}</div>
	
	<ul id="reasons-no" class="{% if non_js_fb != 'no' %}hidden{% endif %}">
		{% if user_less_than_one_octave %}
		<li class="big">{% trans with {'%url%': url_wizard ~ "#afterNegativeFeedbackWithBadVoice"} %}It seems you have not measured your voice properly. Please, <a href="%url%">follow this instructions</a>.{% endtrans %}</li>
		{% else %}
		<li>{% trans with {'%url%': url_wizard ~ "#afterNegativeFeedback"} %}Maybe you didn't measure your voice properly. <a href="%url%">Click here to go to the Wizard</a>.{% endtrans %}</li>
		<li>{% trans %}Maybe you are not singing the song the same way it was analysed for the application{% endtrans %}</li>
		<li>{% trans %}Maybe you are not singing in the same tone as the guitar{% endtrans %}</li>
		{% endif %}
	</ul>
</form>
{% endif %}

<div class="your-voice">
	<em>{% trans %}Your voice:{% endtrans %}</em> {{ your_voice|raw }}
	<a href="{{ path('user_voice', {'_locale': app.locale, 'redirect': global.request.getRequestUri}) }}" class="small-button">{% trans %}Change{% endtrans %}</a>
</div>

<p class="show-voice-chart">
	<a href="javascript:void(0)" class="btn-neutral" id="show-voice-chart">{% trans %}Show voice chart{% endtrans %}</a>
</p>

<div id="voicechart-container">
	<table class="voicechart">
	<col style="width: 5rem">
	<tbody>
	{% for voice in voice_chart %}
		<tr class="{{ voice.css }}">
			<th>{{ voice.caption|trans }}</th>
			{% for i in range(0, voice.offset) %}<td>&nbsp;</td>{% endfor %}
			<td class="note"><div class="inside"><div class="note-in-chart">{{ voice.lowestForPrint }}</div></div></td>
			{% for i in range(0, voice.length - 1) %}<td><div class="colored">&#11035;</div></td>{% endfor %}
			<td class="note"><div class="inside"><div class="note-in-chart">{{ voice.highestForPrint }}</div></div></td>
		</tr>
	{% endfor %}
	<tr><th><a href="javascript:void(0)" id="chart-more">{% trans %}More{% endtrans %}</a></th></tr>
	</tbody>
	</table>
</div>


<div id="dark-bg"></div>
<div id="chord-chart-dialog">
	<figure>
		<img id="chord-chart" src="" alt="" data-urlpattern="{{ global.request.basepath }}/static/img/chords/@.png">
		<figcaption id="chord-chart-caption"></figcaption>
	</figure>
</div>

{% if app.neouser.isLoggedIn %}

{% if app.neoconfig.detailed_feedback %}
<div id="detailed-feedback-container">
	<div id="detailed-feedback-dialog">
		<h4>{% trans %}Which one has worked for you?{% endtrans %}</h4>
		<ul id="transpositions-feedback">
{% for trans in song.transpositions %}
			<li>
				<a href="javascript:void(0)" class="detailed-fb-choice" data-transposition="centered{{ loop.index }}" data-deviation="">
					<span class="chord-sans">{{ trans.chordsForPrint[0]|raw }}</span> 
					<span class="capo">{{ trans.getCapoForPrint() }}</span>
					<span class="circle"></span>
				</a>
			</li>
{% endfor %}

{% if song.not_equivalent %}
			<li>
				<a href="javascript:void(0)" class="detailed-fb-choice" data-transposition="notEquivalent" data-deviation="{{ song.not_equivalent.deviationFromCentered }}">
					<span class="chord-sans">{{ song.not_equivalent.chordsForPrint[0]|raw }}</span> 
					<span class="capo">{{ song.not_equivalent.getCapoForPrint() }}</span>
					<small>â˜… {{ difference }}</small>
					<span class="circle"></span>
				</a>
			</li>
{% endif %}

{% if song.peopleCompatible %}
			<li>
				<a href="javascript:void(0)" class="detailed-fb-choice" data-transposition="peopleCompatible" data-deviation="{{ song.peopleCompatible.deviationFromCentered }}">
					<span class="chord-sans">{{ song.peopleCompatible.chordsForPrint[0]|raw }}</span> 
					<span class="capo">{{ song.peopleCompatible.getCapoForPrint() }}</span>
					<small>â˜… {% trans %}assembly{% endtrans %}</small>
					<span class="circle"></span>
				</a>
			</li>
{% endif %}
		</ul>
	</div>
</div>
{% endif %}

{% import 'base.twig' as self %}
{{ self.loadJsFramework() }}

<script>

NT = {

	showChart: function(oLinkContainer)
	{
		document.getElementById("voicechart-container").style.display = 'block';
		$(oLinkContainer).remove();
		ga('send', 'event', 'Actions', 'ShowVoiceChart', '{{ song.song.title }}');
	},

	sendFeedbackAjax: function(postJsonData, callbackSuccess)
	{
		$.ajax({
			url: "{{ path('transposition_feedback') }}",
			type: "POST",
			dataType: "json",
			data: postJsonData,
			success: callbackSuccess,
			error: function(XHR)
			{
				if (408 == XHR.status)
				{
					document.getElementById("feedback-thanks").style.display = 'none';
					ga('send', 'event', 'FeedbackTransposition', 'FeedbackSentAfterSessionExpired', '{{ song.song.title }}');

					alert("{% trans %}Your session has expired. Please log-in and submit the feedback again.{% endtrans %}");
					window.location.reload();
				}
			}
		});
	},

	sendBasicFeedback: function(iAnswer)
	{
		NT.sendFeedbackAjax({
			id_song: {{ song.song.idSong }},
			worked: iAnswer,
			referer: '{{ global.request.server.get('HTTP_REFERER') }}',
			centered_score_rate: '{{ song.transpositions[1].score / song.transpositions[0].score }}',
			deviation: '{{ song.not_equivalent.deviationFromCentered ?: song.peopleCompatible.deviationFromCentered ?: null }}',
			pc_status: '{{ song.peopleCompatibleStatusMsg|default('') }}',
		}, function()
		{
			ga('send', 'event', 'FeedbackTransposition', (iAnswer ? 'Worked' : 'NotWorked'), '{{ song.song.title }}');

{% if app.neoconfig.detailed_feedback %}
			if (1 == iAnswer)
			{
				NT.showDetailedFeedbackDialog();
			}
{% endif %}
		});
	},

	sendDetailedFeedback: function(transposition, deviation)
	{
		NT.sendFeedbackAjax({
			'id_song': {{ song.song.idSong }},
			'worked': 1,
			'referer': '{{ global.request.server.get('HTTP_REFERER') }}',
			'transposition': transposition,
			'pc_status': '{{ song.peopleCompatibleStatusMsg }}',
			'deviation': deviation,
			'centered_score_rate': {{ song.transpositions[1].score / song.transpositions[0].score }}
		});
	},

	showDetailedFeedbackDialog: function()
	{
		document.getElementById("dark-bg").style.display = 'block';
		document.getElementById("detailed-feedback-container").style.display = 'block';

		$(".detailed-fb-choice").click(function (e)
		{
			NT.sendDetailedFeedback(
				e.currentTarget.dataset.transposition, 
				e.currentTarget.dataset.deviation
			);

			document.getElementById("dark-bg").style.display = 'none';
			document.getElementById("detailed-feedback-container").style.display = 'none';
			$(".answers").hide();
			document.getElementById("feedback-thanks").style.display = 'block';
		});
	},

	openChordChartDialog: function(event)
	{
		var chordName 			= event.target.parentNode.dataset.chord,
			chordChartImg		= document.getElementById('chord-chart'),
			dialog 				= document.getElementById('chord-chart-dialog'),
			chordChartCaption 	= document.getElementById('chord-chart-caption'),
			isTouchScreen 	  	= window.navigator.msMaxTouchPoints || ('ontouchstart' in document.documentElement),
			darkBackground 	  	= document.getElementById('dark-bg');

		//5th chords are wrong in the ES songbook. They are actually 9th -_-
		chordName = chordName.replace(/5$/, '9');

		chordChartImg.addEventListener('error', function(event) {
			ga('send', 'event', 'Actions', 'RequestMissingChordChart', chordName);
			event.target.src = '{{ global.request.basepath }}/static/img/chords/unknown-{{ app.locale }}.png';
		});

		chordChartImg.setAttribute(
			'src',
			chordChartImg.dataset.urlpattern.replace('@', chordName.replace('#', 's'))
		);

		chordChartImg.setAttribute('alt', event.target.innerHTML);
		chordChartImg.addEventListener('load', function() {
			chordChartImg.style.visibility = 'visible';
			dialog.style.width = chordChartImg.offsetWidth + 'px';
		});

		chordChartCaption.innerHTML = event.target.innerHTML;

		if (isTouchScreen)
		{
			dialog.style.display = 'block';
			darkBackground.style.display = 'block';
			return;
		}

		// Position the dialog next to the chord.
		var dialogTop  = event.target.parentNode.offsetTop + event.target.parentNode.offsetHeight;
			dialogLeft = event.target.parentNode.getBoundingClientRect().left + event.target.parentNode.offsetWidth;

		dialog.style.position 	= 'fixed';
		dialog.style.margin 	= '0';
		dialog.style.top 		= dialogTop + "px";
		dialog.style.left 		= dialogLeft + "px";

		dialog.style.display = 'block';

		// If it gets out of the limits of the screen, place at in the corner.
		/** @todo There should be a way of shortening this */
		var currentRight  = dialog.getBoundingClientRect().left + dialog.offsetWidth,
			currentBottom = dialog.getBoundingClientRect().top + dialog.offsetHeight;

		if (currentRight > window.innerWidth)
		{
			dialog.style.left = (window.innerWidth - dialog.offsetWidth) + "px";
		}

		if (currentBottom > window.innerHeight)
		{
			dialog.style.top = (window.innerHeight - dialog.offsetHeight) + "px";
		}

		event.target.addEventListener('mouseout', function() {
			dialog.style.display = 'none';
			chordChartImg.style.visibility = 'hidden';
		});
	},

	initializeChordChartDialog: function()
	{
		var isTouchScreen 	  = window.navigator.msMaxTouchPoints || ('ontouchstart' in document.documentElement),
			dialog 			  = document.getElementById('chord-chart-dialog'),
			darkBackground 	  = document.getElementById('dark-bg');

		$(".transposed span").click(NT.openChordChartDialog);

		if (!isTouchScreen)
		{
			$(".transposed span").mouseover(NT.openChordChartDialog);
		}

		var closeDialog = function() {
			dialog.style.display = 'none';
			darkBackground.style.display = 'none';
			document.getElementById("detailed-feedback-container").style.display = 'none';
		};

		dialog.addEventListener('click', closeDialog);
		darkBackground.addEventListener('click', closeDialog);
	},

	init: function()
	{
		NT.initializeChordChartDialog();

		$(document.getElementById("show-voice-chart")).click(function(e) {
			NT.showChart(e.target.parentNode);
		});

		$(document.getElementById("chart-more")).click(function(e) {
			$(".original-people")
				.add(".transposed-people")
				.add(".people-standard")
				.css("display", "table-row");
			$(e.target.parentNode.parentNode).remove();
		});
	}
};

$(function() {

	NT.init();

	$("#feedback-yes").add("#feedback-no").click(function(e) {
		e.preventDefault();
		$(".answers").hide();
		var iAnswer = parseInt(this.dataset.worked);
		NT.sendBasicFeedback(iAnswer);
		document.getElementById((iAnswer) ? "feedback-thanks" : "reasons-no").style.display = 'block';
	});
});
</script>

{% endif %}

{% endblock %}
